// Code generated by "cue exp gengotypes"; DO NOT EDIT.

package artifacts

// ContainerArtifact defines a container image artifact.
// This artifact type represents a container image that can be pushed to registries.
// Discriminated by type!: "container".
type ContainerArtifact struct {
	// Required literal tag for discriminated union
	Type string `json:"type"`

	// Container image reference (e.g., "myapp:v1.0.0")
	Ref string `json:"ref"`

	// Producer that builds this artifact
	Producer ArtifactProducer `json:"producer"`

	// References to publisher names from repo.cue
	Publishers []string `json:"publishers"`
}

// BinaryArtifact defines a binary executable artifact.
// This artifact type represents a standalone binary executable.
// Discriminated by type!: "binary".
type BinaryArtifact struct {
	// Required literal tag for discriminated union
	Type string `json:"type"`

	// Name of the binary (as produced by producer)
	Name string `json:"name"`

	// Producer that builds this artifact
	Producer ArtifactProducer `json:"producer"`

	// References to publisher names from repo.cue
	Publishers []string `json:"publishers"`
}

// ArchiveArtifact defines an archive artifact.
// This artifact type represents a compressed archive file.
// Discriminated by type!: "archive".
type ArchiveArtifact struct {
	// Required literal tag for discriminated union
	Type string `json:"type"`

	// Compression format (default: gzip)
	Compression string `json:"compression"`

	// Producer that builds this artifact
	Producer ArtifactProducer `json:"producer"`

	// References to publisher names from repo.cue
	Publishers []string `json:"publishers"`
}

// ArtifactSpec is a discriminated union of all artifact types.
// MVP: container, binary, archive
// Future: can extend with | #HelmChartArtifact | #TerraformModuleArtifact, etc.
type ArtifactSpec map[string]any

// EarthlyProducer defines an Earthly-based artifact producer.
// This producer uses Earthly targets to build artifacts.
// Discriminated by type!: "earthly".
type EarthlyProducer struct {
	// Required literal tag for discriminated union
	Type string `json:"type"`

	// Earthly target to build (e.g., "+build")
	Target string `json:"target"`

	// Artifact output reference (e.g., "+build/output")
	Artifact string `json:"artifact,omitempty"`
}

// ArtifactProducer is a discriminated union of all producer types.
// MVP: earthly only
// Future: can extend with | #DockerProducer | #CustomProducer, etc.
type ArtifactProducer EarthlyProducer
